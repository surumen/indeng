{"version":3,"sources":["images/iphone.png","App.js","serviceWorker.js","index.js","images/school.png","images/logo.svg"],"names":["module","exports","__webpack_require__","p","App","react_default","a","createElement","className","src","logo","alt","href","data-w-id","data-ix","iphone","width","school","Component","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"2EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,uOCgEzBC,mLAxDX,OACEC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACnBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cAAaH,EAAAC,EAAAC,cAAA,OAAKE,IAAKC,IAAMC,IAAI,UAChDN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAUH,EAAAC,EAAAC,cAAA,KAAGK,KAAK,GAAGJ,UAAU,uBAArB,6BAE3BH,EAAAC,EAAAC,cAAA,OAAKM,YAAU,uCAAuCL,UAAU,kBAC9DH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,OAAKM,YAAU,uCAAuCL,UAAU,2BAC9DH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAAd,iBAAiDH,EAAAC,EAAAC,cAAA,YACjDF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYM,UAAQ,mBAAnC,KACAT,EAAAC,EAAAC,cAAA,MAAIC,UAAU,sBAAd,0BACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAMzBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mCACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKM,YAAU,uCAAuCL,UAAU,UAASH,EAAAC,EAAAC,cAAA,OAAKE,IAAKM,IAAQC,MAAO,IAAKL,IAAI,UAC3GN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAMzBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACbH,EAAAC,EAAAC,cAAA,OAAKE,IAAKQ,IAAQD,MAAO,IAAKL,IAAI,UAEpCN,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAd,kBACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAd,4BACAH,EAAAC,EAAAC,cAAA,wEAEFF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBAAd,mCACAH,EAAAC,EAAAC,cAAA,mGAhDQW,aCMEC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCTNC,IAASC,OAAOpB,EAAAC,EAAAC,cAACmB,EAAD,MAASC,SAASC,eAAe,SDwH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC,kCEnInBlC,EAAAC,QAAiBC,EAAAC,EAAuB,sDCAxCH,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.47f92d71.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/iphone.40b913f6.png\";","import React, { Component } from 'react';\n\nimport logo from \"./images/logo.svg\";\nimport iphone from \"./images/iphone.png\";\nimport school from \"./images/school.png\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n        <div className=\"xoverflow\">\n    <div className=\"top-nav\">\n      <div className=\"stoop-logo\"><img src={logo} alt=\"true\"/></div>\n      <div className=\"nav-cta\"><a href=\"\" className=\"button nav w-button\">Sign up for beta access</a></div>\n    </div>\n    <div data-w-id=\"40fc9d82-e5dd-8111-a0d0-50d23c2a7dd3\" className=\"header-section\">\n      <div className=\"header-100vh-container\">\n        <div className=\"content-container\">\n          <div data-w-id=\"8ddfbdfe-bbec-f38e-47e7-991ee67b3b1a\" className=\"headercontainer_noblend\">\n            <div className=\"skewbaccacontainer\">\n              <h1 className=\"heading no-padding\">Healthy gaming<br /></h1>\n              <div className=\"skewbacca\" data-ix=\"new-interaction\"> </div>\n              <h1 className=\"heading no-padding\">habits. Better grades.</h1>\n              <div className=\"skewbacca _2\" />\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n    <div className=\"header-background-container\">\n      <div className=\"columns w-row\">\n        <div className=\"w-col w-col-6\" />\n        <div className=\"background-column w-col w-col-6\">\n          <div className=\"perspective\">\n            <div data-w-id=\"77a0400a-ea60-aecd-8e20-3394385328b7\" className=\"iphone\"><img src={iphone} width={450} alt=\"true\" /></div>\n            <div className=\"div-block\" />\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n  <div className=\"section\">\n    <div className=\"not-sticky\">\n      <div className=\"content-column features\">\n        <img src={school} width={375} alt=\"true\" />\n      </div>\n      <div className=\"content-column left-aligned\">\n        <h1 className=\"section-title\">Healthy gaming</h1>\n        <div className=\"feature-container\">\n          <h3 className=\"feature-title\">Most effective motivator</h3>\n          <p>Replace external motivators with what your teen likes best</p>\n        </div>\n        <div className=\"feature-container\">\n          <h3 className=\"feature-title\">Setting up students for success</h3>\n          <p>The way students learn and play today, is the way they will work tomorrow.</p>\n        </div>\n      </div>\n    </div>\n  </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './images/iphone.png';\nimport './images/logo.svg';\nimport './images/school.png';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/school.b73d327d.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.e8405bb7.svg\";"],"sourceRoot":""}